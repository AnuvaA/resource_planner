A planning problem has at least 2 levels of constraints: +
A *(negative) hard constraint* must not be broken. For example: 1 teacher can not teach 2 different lessons at the same time. +
A *(negative) soft constraint* should not be broken if it can be avoided. For example: Teacher A does not like to teach on Friday afternoon +

These constraints define the score calculation (AKA fitness function) of a planning problem. Each solution of a planning problem can be graded with a score. With Planner, score constraints are written in an Object Orientated language, *such as Java code or Drools rules.* Such code is easy, flexible and scalable.
